package NLP;


import org.ansj.domain.Result;
import org.ansj.domain.Term;
import org.ansj.splitWord.analysis.ToAnalysis;
//import scala.util.control.Exception;

import java.io.IOException;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Iterator;

public class ChnWordSeg {


    //中文分词
    public static String chnSeg(String content) {
        String strResult = "";
        try {
            //分词
            Result segWords = ToAnalysis.parse(content);
            //提取分词
            Iterator<Term> segTerms = segWords.iterator();
            StringBuffer strbuf = new StringBuffer();
            while (segTerms.hasNext()) {
                Term tm = segTerms.next();
                String strNs = tm.getNatureStr();//获取词性
                if (strNs == "null") continue;
                char cns = strNs.charAt(0);//取词性第一个字母
                //http://nlpchina.github.io/ansj_seg/content.html?name=词性说明
                if (cns == 'n' || cns == 't' || cns == 's' ||//名词、时间词、处所词
                        cns == 'f' || cns == 'v' || cns == 'a' || //方位词、动词、形容词
                        cns == 'b' || cns == 'z' || cns == 'r' ||//区别词、状态词、代词
                        strNs.equals("mq") || cns == 'q' || cns == 'd' ||//数词、数量词、副词
                        cns == 'y' || cns == 'x' || strNs.equals("en")) {//语气词、字符串x、英文
                    //介词p、连词c、助词u、叹词e、拟声词o、标点符号w、前缀h、后缀k不获取 ，数词m只获取其中mq数量词
                    String strNm = tm.getName();
                    strbuf.append(strNm + ":" + strNs + "|");
                }
                //strbuf.append("\r\n");//换行
            }
            strResult = strbuf.toString();
            strResult = strResult.substring(0, strResult.length() - 1);//截取最后一个字符|
        } catch (Exception e) {
           System.out.println(e.getMessage());
        }
        return strResult;
    }


//    public static Map<String, Integer> demo(String a) {
//        //存放词的数组
//        String[] words = null;
//        //存放词和词的个数的map,key:词,value:个数
//        Map<String, Integer> wordsMap = new HashMap();
//        String line = null;
//        int sum;
//        try {
//            BufferedReader br = new BufferedReader(new StringReader(a));
//            //循环,每次从file中读取一行数据
//            while ((line = br.readLine()) != null) {
//                //System.out.println(line);
//                words = StringUtils.splitString(line, "|");//以|为分隔符,截取字符串,构建字符串数组
//                //循环遍历字符串数组
//                for (String str : words) {
//                    if (wordsMap.containsKey(str)) {
//                        wordsMap.put(str, wordsMap.get(str) + 1);
//                    } else {
//                        wordsMap.put(str, 1);
//                    }
//                }
//            }
//            br.close();
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        return wordsMap;
//    }


    public static void main() throws SQLException, IOException {

        java.sql.Connection conn;
        conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/community?characterEncoding=utf8&useSSL=false", "root", "123456");
        java.sql.Statement stmt = conn.createStatement();
        String sql = "select * from tb_moments";
        java.sql.ResultSet rs = stmt.executeQuery(sql);
        while (rs.next()) {
            int id = rs.getInt("id");
//            Map<String, Integer> map = ChnWordSeg.demo(ChnWordSeg.chnSeg(rs.getString("content")));
//            String content = "";
//            for (String key : map.keySet()) {
//                content += (key+"->"+map.get(key)+"|");
//            }
            String content=ChnWordSeg.chnSeg(rs.getString("content"));
            String logo = rs.getString(("logo"));
            int uid = rs.getInt("uid");
            String createtime = rs.getString("createtime");

            String sql1 = "insert into tb_moments_copy(id,content,logo,uid,createtime) values('" + id + "','" + content + "','" + logo + "','" + uid + "','" + createtime + "')";
            java.sql.Statement stmt1 = conn.createStatement();
            stmt1.executeUpdate(sql1);
            System.out.println("数据库插入成功！！！");
        }

    }
}


